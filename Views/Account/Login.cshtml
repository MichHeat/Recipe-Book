@using RecipeBook.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
<style>
    *,
    *::after,
    *::before {
        box-sizing: border-box;
        padding: 0;
        margin: 0;
    }

    .html {
        font-size: 62.5%;
    }

    body {
        font-family: "Poppins", sans-serif;
    }

    /* ///////////..utility classes../////////// */

    .container {
        max-width: 1200px;
        width: 90%;
        margin: auto;
    }

    .btn {
        display: inline-block;
        padding: 0.5em 1.5em;
        text-decoration: none;
        border-radius: 50px;
        cursor: pointer;
        outline: none;
        margin-top: 1em;
        text-transform: uppercase;
        font-weight: small;
    }

    .btn-primary {
        color: #fff;
        background: #16a083;
    }

        .btn-primary:hover {
            background: #117964;
            transition: background 0.3s ease-in-out;
        }

    /* ............/navbar/............ *

    /* desktop mode............/// */

    .navbar input[type="checkbox"],
    .navbar .hamburger-lines {
        display: none;
    }

    .navbar {
        box-shadow: 0px 5px 10px 0px #aaa;
        width: 100%;
        background: #fff;
        color: #000;
        opacity: 0.85;
        height: 50px;
        z-index: 12;
    }

    .navbar-container {
        display: flex;
        justify-content: space-between;
        height: 64px;
        align-items: center;
    }

    .menu-items {
        order: 2;
        display: flex;
    }

        .menu-items li {
            list-style: none;
            margin-left: 1.5rem;
            margin-bottom: 0.5rem;
            font-size: 1.2rem;
        }

        .menu-items a {
            text-decoration: none;
            color: #444;
            font-weight: 500;
            transition: color 0.3s ease-in-out;
        }

            .menu-items a:hover {
                color: #117964;
                transition: color 0.3s ease-in-out;
            }

    .logo {
        order: 1;
        font-size: 2.3rem;
        margin-bottom: 0.5rem;
    }

    /* ............//// Showcase styling ////......... */

    .showcase-area {
        height: 50vh;
        background: linear-gradient( rgba(240, 240, 240, 0.144), rgba(255, 255, 255, 0.336) ), url("https://i.postimg.cc/wT3TQS3V/header-image2.jpg");
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
    }

    .showcase-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
        font-size: 1.6rem;
    }

    .main-title {
        text-transform: uppercase;
        margin-top: 1.5em;
    }
</style>
<main aria-labelledby="title">
    <h2 id="title">@ViewBag.Title.</h2>
    <div class="row">
        <div class="col-md-8">
            <section id="loginForm">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h4>Use a local account to log in.</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="offset-md-2 col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="offset-md-2 col-md-10">
                            <input type="submit" value="Log in" class="btn btn-outline-dark" />
                        </div>
                    </div>
                    <p>
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>
                    @* Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p>*@
                }
            </section>
        </div>
        <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}